-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParLatte.y
-----------------------------------------------------------------------------

state 147 contains 1 shift/reduce conflicts.

rule 47 is unused
rule 48 is unused
rule 49 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListClassPole '}'      (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole '}'   (7)
	ClassPole -> Type Ident ';'                        (8)
	ClassPole -> Type Ident '(' ListArg ')' Block      (9)
	ListTopDef -> TopDef                               (10)
	ListTopDef -> TopDef ListTopDef                    (11)
	ListClassPole -> ClassPole                         (12)
	ListClassPole -> ClassPole ListClassPole           (13)
	Arg -> Type Ident                                  (14)
	ListArg ->                                         (15)
	ListArg -> Arg                                     (16)
	ListArg -> Arg ',' ListArg                         (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> ListStmt Stmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> LValue '=' Expr ';'                        (24)
	Stmt -> LValue '++' ';'                            (25)
	Stmt -> LValue '--' ';'                            (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' Type Ident ':' Ident ')'         (32)
	Stmt -> Expr ';'                                   (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	LValue -> Ident                                    (38)
	LValue -> LValue '.' Ident                         (39)
	LValue -> LValue '[' Expr ']'                      (40)
	Type -> 'int'                                      (41)
	Type -> 'string'                                   (42)
	Type -> 'boolean'                                  (43)
	Type -> 'void'                                     (44)
	Type -> Type '[]'                                  (45)
	Type -> Ident                                      (46)
	ListType ->                                        (47)
	ListType -> Type                                   (48)
	ListType -> Type ',' ListType                      (49)
	Expr8 -> LValue                                    (50)
	Expr8 -> Integer                                   (51)
	Expr8 -> 'true'                                    (52)
	Expr8 -> 'false'                                   (53)
	Expr8 -> LValue '(' ListExpr ')'                   (54)
	Expr8 -> String                                    (55)
	Expr8 -> '(' Expr ')'                              (56)
	Expr7 -> 'new' Type '[' Expr ']'                   (57)
	Expr7 -> 'new' Type                                (58)
	Expr7 -> Expr8                                     (59)
	Expr6 -> '(' Type ')null'                          (60)
	Expr6 -> Expr7                                     (61)
	Expr5 -> '-' Expr6                                 (62)
	Expr5 -> '!' Expr6                                 (63)
	Expr5 -> Expr6                                     (64)
	Expr4 -> Expr4 MulOp Expr5                         (65)
	Expr4 -> Expr5                                     (66)
	Expr3 -> Expr3 AddOp Expr4                         (67)
	Expr3 -> Expr4                                     (68)
	Expr2 -> Expr2 RelOp Expr3                         (69)
	Expr2 -> Expr3                                     (70)
	Expr1 -> Expr2 '&&' Expr1                          (71)
	Expr1 -> Expr2                                     (72)
	Expr -> Expr1 '||' Expr                            (73)
	Expr -> Expr1                                      (74)
	ListExpr ->                                        (75)
	ListExpr -> Expr                                   (76)
	ListExpr -> Expr ',' ListExpr                      (77)
	AddOp -> '+'                                       (78)
	AddOp -> '-'                                       (79)
	MulOp -> '*'                                       (80)
	MulOp -> '/'                                       (81)
	MulOp -> '%'                                       (82)
	RelOp -> '<'                                       (83)
	RelOp -> '<='                                      (84)
	RelOp -> '>'                                       (85)
	RelOp -> '>='                                      (86)
	RelOp -> '=='                                      (87)
	RelOp -> '!='                                      (88)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'='            { PT _ (TS _ 20) }
	'=='           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'boolean'      { PT _ (TS _ 27) }
	'class'        { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'extends'      { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'for'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'int'          { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ClassPole       rules 8, 9
	ListTopDef      rules 10, 11
	ListClassPole   rules 12, 13
	Arg             rule  14
	ListArg         rules 15, 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	LValue          rules 38, 39, 40
	Type            rules 41, 42, 43, 44, 45, 46
	ListType        rules 47, 48, 49
	Expr8           rules 50, 51, 52, 53, 54, 55, 56
	Expr7           rules 57, 58, 59
	Expr6           rules 60, 61
	Expr5           rules 62, 63, 64
	Expr4           rules 65, 66
	Expr3           rules 67, 68
	Expr2           rules 69, 70
	Expr1           rules 71, 72
	Expr            rules 73, 74
	ListExpr        rules 75, 76, 77
	AddOp           rules 78, 79
	MulOp           rules 80, 81, 82
	RelOp           rules 83, 84, 85, 86, 87, 88

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'['            reduce using rule 46
	'[]'           reduce using rule 46
	']'            reduce using rule 46
	'||'           reduce using rule 46
	L_ident        reduce using rule 46


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 10)
	ListTopDef -> TopDef . ListTopDef                   (rule 11)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	%eof           reduce using rule 10

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	')null'        reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_ident        reduce using rule 43


State 9

	TopDef -> 'class' . Ident '{' ListClassPole '}'     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClassPole '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	')null'        reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_ident        reduce using rule 41


State 11

	Type -> 'string' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	')null'        reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_ident        reduce using rule 42


State 12

	Type -> 'void' .                                    (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	')null'        reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'||'           reduce using rule 44
	L_ident        reduce using rule 44


State 13

	TopDef -> 'class' Ident . '{' ListClassPole '}'     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClassPole '}'    (rule 7)

	'extends'      shift, and enter state 18
	'{'            shift, and enter state 19


State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	')null'        reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'['            reduce using rule 45
	'[]'           reduce using rule 45
	']'            reduce using rule 45
	'||'           reduce using rule 45
	L_ident        reduce using rule 45


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 11)

	%eof           reduce using rule 11


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 25
	Type           goto state 26

State 18

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClassPole '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 23

State 19

	TopDef -> 'class' Ident '{' . ListClassPole '}'     (rule 6)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 20
	ListClassPole  goto state 21
	Type           goto state 22

State 20

	ListClassPole -> ClassPole .                        (rule 12)
	ListClassPole -> ClassPole . ListClassPole          (rule 13)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 20
	ListClassPole  goto state 33
	Type           goto state 22

State 21

	TopDef -> 'class' Ident '{' ListClassPole . '}'     (rule 6)

	'}'            shift, and enter state 32


State 22

	ClassPole -> Type . Ident ';'                       (rule 8)
	ClassPole -> Type . Ident '(' ListArg ')' Block     (rule 9)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 31

State 23

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClassPole '}'    (rule 7)

	'{'            shift, and enter state 30


State 24

	ListArg -> Arg .                                    (rule 16)
	ListArg -> Arg . ',' ListArg                        (rule 17)

	')'            reduce using rule 16
	','            shift, and enter state 29


State 25

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 28


State 26

	Arg -> Type . Ident                                 (rule 14)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 27

State 27

	Arg -> Type Ident .                                 (rule 14)

	')'            reduce using rule 14
	','            reduce using rule 14


State 28

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 39

	Block          goto state 38

State 29

	ListArg -> Arg ',' . ListArg                        (rule 17)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 37
	Type           goto state 26

State 30

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClassPole '}'    (rule 7)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 20
	ListClassPole  goto state 36
	Type           goto state 22

State 31

	ClassPole -> Type Ident . ';'                       (rule 8)
	ClassPole -> Type Ident . '(' ListArg ')' Block     (rule 9)

	'('            shift, and enter state 34
	';'            shift, and enter state 35


State 32

	TopDef -> 'class' Ident '{' ListClassPole '}' .     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 33

	ListClassPole -> ClassPole ListClassPole .          (rule 13)

	'}'            reduce using rule 13


State 34

	ClassPole -> Type Ident '(' . ListArg ')' Block     (rule 9)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 24
	ListArg        goto state 42
	Type           goto state 26

State 35

	ClassPole -> Type Ident ';' .                       (rule 8)

	'boolean'      reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	'void'         reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8


State 36

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole . '}'    (rule 7)

	'}'            shift, and enter state 41


State 37

	ListArg -> Arg ',' ListArg .                        (rule 17)

	')'            reduce using rule 17


State 38

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 39

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19

	ListStmt       goto state 40

State 40

	Block -> '{' ListStmt . '}'                         (rule 18)
	ListStmt -> ListStmt . Stmt                         (rule 20)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'string'       shift, and enter state 11
	'true'         shift, and enter state 69
	'void'         shift, and enter state 12
	'while'        shift, and enter state 70
	'{'            shift, and enter state 39
	'}'            shift, and enter state 71
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 48
	LValue         goto state 49
	Type           goto state 50
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 59

State 41

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 42

	ClassPole -> Type Ident '(' ListArg . ')' Block     (rule 9)

	')'            shift, and enter state 43


State 43

	ClassPole -> Type Ident '(' ListArg ')' . Block     (rule 9)

	'{'            shift, and enter state 39

	Block          goto state 112

State 44

	LValue -> Ident .                                   (rule 38)
	Type -> Ident .                                     (rule 46)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	')null'        reduce using rule 46
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	'.'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'['            reduce using rule 38
	'[]'           reduce using rule 46
	'||'           reduce using rule 38
	L_ident        reduce using rule 46


State 45

	Expr8 -> Integer .                                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 46

	Expr8 -> String .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 47

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 48

	ListStmt -> ListStmt Stmt .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 49

	Stmt -> LValue . '=' Expr ';'                       (rule 24)
	Stmt -> LValue . '++' ';'                           (rule 25)
	Stmt -> LValue . '--' ';'                           (rule 26)
	LValue -> LValue . '.' Ident                        (rule 39)
	LValue -> LValue . '[' Expr ']'                     (rule 40)
	Expr8 -> LValue .                                   (rule 50)
	Expr8 -> LValue . '(' ListExpr ')'                  (rule 54)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 106
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           shift, and enter state 107
	'-'            reduce using rule 50
	'--'           shift, and enter state 108
	'.'            shift, and enter state 109
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            shift, and enter state 110
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            shift, and enter state 111
	'||'           reduce using rule 50


State 50

	Stmt -> Type . ListItem ';'                         (rule 23)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 105

State 51

	Expr7 -> Expr8 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 52

	Expr6 -> Expr7 .                                    (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 53

	Expr5 -> Expr6 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 54

	Expr4 -> Expr5 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66


State 55

	Expr4 -> Expr4 . MulOp Expr5                        (rule 65)
	Expr3 -> Expr4 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            shift, and enter state 100
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 101
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            shift, and enter state 102
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	MulOp          goto state 99

State 56

	Expr3 -> Expr3 . AddOp Expr4                        (rule 67)
	Expr2 -> Expr3 .                                    (rule 70)

	'!='           reduce using rule 70
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'+'            shift, and enter state 97
	','            reduce using rule 70
	'-'            shift, and enter state 98
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	']'            reduce using rule 70
	'||'           reduce using rule 70

	AddOp          goto state 96

State 57

	Expr2 -> Expr2 . RelOp Expr3                        (rule 69)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 71)
	Expr1 -> Expr2 .                                    (rule 72)

	'!='           shift, and enter state 89
	'&&'           shift, and enter state 90
	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'=='           shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	']'            reduce using rule 72
	'||'           reduce using rule 72

	RelOp          goto state 88

State 58

	Expr -> Expr1 . '||' Expr                           (rule 73)
	Expr -> Expr1 .                                     (rule 74)

	')'            reduce using rule 74
	','            reduce using rule 74
	';'            reduce using rule 74
	']'            reduce using rule 74
	'||'           shift, and enter state 87


State 59

	Stmt -> Expr . ';'                                  (rule 33)

	';'            shift, and enter state 86


State 60

	Expr5 -> '!' . Expr6                                (rule 63)

	'('            shift, and enter state 61
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 85

State 61

	Expr8 -> '(' . Expr ')'                             (rule 56)
	Expr6 -> '(' . Type ')null'                         (rule 60)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'string'       shift, and enter state 11
	'true'         shift, and enter state 69
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Type           goto state 83
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 84

State 62

	Expr5 -> '-' . Expr6                                (rule 62)

	'('            shift, and enter state 61
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 82

State 63

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 64

	Expr8 -> 'false' .                                  (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 65

	Stmt -> 'for' . '(' Type Ident ':' Ident ')'        (rule 32)

	'('            shift, and enter state 81


State 66

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 80


State 67

	Expr7 -> 'new' . Type '[' Expr ']'                  (rule 57)
	Expr7 -> 'new' . Type                               (rule 58)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 79

State 68

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 78
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 77

State 69

	Expr8 -> 'true' .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 70

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 74


State 71

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'class'        reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 72

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 73

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 74

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 134

State 75

	LValue -> Ident .                                   (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'.'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'||'           reduce using rule 38


State 76

	LValue -> LValue . '.' Ident                        (rule 39)
	LValue -> LValue . '[' Expr ']'                     (rule 40)
	Expr8 -> LValue .                                   (rule 50)
	Expr8 -> LValue . '(' ListExpr ')'                  (rule 54)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            shift, and enter state 106
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            shift, and enter state 109
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            shift, and enter state 111
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 77

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 133


State 78

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 79

	Type -> Type . '[]'                                 (rule 45)
	Expr7 -> 'new' Type . '[' Expr ']'                  (rule 57)
	Expr7 -> 'new' Type .                               (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            shift, and enter state 132
	'[]'           shift, and enter state 15
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 80

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 131

State 81

	Stmt -> 'for' '(' . Type Ident ':' Ident ')'        (rule 32)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 130

State 82

	Expr5 -> '-' Expr6 .                                (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 83

	Type -> Type . '[]'                                 (rule 45)
	Expr6 -> '(' Type . ')null'                         (rule 60)

	')null'        shift, and enter state 129
	'[]'           shift, and enter state 15


State 84

	Expr8 -> '(' Expr . ')'                             (rule 56)

	')'            shift, and enter state 128


State 85

	Expr5 -> '!' Expr6 .                                (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 86

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 87

	Expr -> Expr1 '||' . Expr                           (rule 73)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 127

State 88

	Expr2 -> Expr2 RelOp . Expr3                        (rule 69)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 126

State 89

	RelOp -> '!=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 90

	Expr1 -> Expr2 '&&' . Expr1                         (rule 71)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 125

State 91

	RelOp -> '<' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 92

	RelOp -> '<=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 93

	RelOp -> '==' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 94

	RelOp -> '>' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 95

	RelOp -> '>=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 96

	Expr3 -> Expr3 AddOp . Expr4                        (rule 67)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 124

State 97

	AddOp -> '+' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 98

	AddOp -> '-' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 99

	Expr4 -> Expr4 MulOp . Expr5                        (rule 65)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 123

State 100

	MulOp -> '%' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 101

	MulOp -> '*' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 102

	MulOp -> '/' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 103

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 122


State 104

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 121
	';'            reduce using rule 36


State 105

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 120


State 106

	Expr8 -> LValue '(' . ListExpr ')'                  (rule 54)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 75
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 118
	ListExpr       goto state 119

State 107

	Stmt -> LValue '++' . ';'                           (rule 25)

	';'            shift, and enter state 117


State 108

	Stmt -> LValue '--' . ';'                           (rule 26)

	';'            shift, and enter state 116


State 109

	LValue -> LValue '.' . Ident                        (rule 39)

	L_ident        shift, and enter state 2

	Ident          goto state 115

State 110

	Stmt -> LValue '=' . Expr ';'                       (rule 24)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 114

State 111

	LValue -> LValue '[' . Expr ']'                     (rule 40)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 113

State 112

	ClassPole -> Type Ident '(' ListArg ')' Block .     (rule 9)

	'boolean'      reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	'void'         reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9


State 113

	LValue -> LValue '[' Expr . ']'                     (rule 40)

	']'            shift, and enter state 144


State 114

	Stmt -> LValue '=' Expr . ';'                       (rule 24)

	';'            shift, and enter state 143


State 115

	LValue -> LValue '.' Ident .                        (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39


State 116

	Stmt -> LValue '--' ';' .                           (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 117

	Stmt -> LValue '++' ';' .                           (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 118

	ListExpr -> Expr .                                  (rule 76)
	ListExpr -> Expr . ',' ListExpr                     (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 142


State 119

	Expr8 -> LValue '(' ListExpr . ')'                  (rule 54)

	')'            shift, and enter state 141


State 120

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 121

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_ident        shift, and enter state 2

	Ident          goto state 103
	Item           goto state 104
	ListItem       goto state 140

State 122

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 139

State 123

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65


State 124

	Expr4 -> Expr4 . MulOp Expr5                        (rule 65)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            shift, and enter state 100
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 101
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 102
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67

	MulOp          goto state 99

State 125

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	']'            reduce using rule 71
	'||'           reduce using rule 71


State 126

	Expr3 -> Expr3 . AddOp Expr4                        (rule 67)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 69)

	'!='           reduce using rule 69
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 97
	','            reduce using rule 69
	'-'            shift, and enter state 98
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69

	AddOp          goto state 96

State 127

	Expr -> Expr1 '||' Expr .                           (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	';'            reduce using rule 73
	']'            reduce using rule 73


State 128

	Expr8 -> '(' Expr ')' .                             (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 129

	Expr6 -> '(' Type ')null' .                         (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 130

	Stmt -> 'for' '(' Type . Ident ':' Ident ')'        (rule 32)
	Type -> Type . '[]'                                 (rule 45)

	'[]'           shift, and enter state 15
	L_ident        shift, and enter state 2

	Ident          goto state 138

State 131

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 137


State 132

	Expr7 -> 'new' Type '[' . Expr ']'                  (rule 57)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 136

State 133

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 134

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 135


State 135

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'string'       shift, and enter state 11
	'true'         shift, and enter state 69
	'void'         shift, and enter state 12
	'while'        shift, and enter state 70
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 149
	LValue         goto state 49
	Type           goto state 50
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 59

State 136

	Expr7 -> 'new' Type '[' Expr . ']'                  (rule 57)

	']'            shift, and enter state 148


State 137

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'string'       shift, and enter state 11
	'true'         shift, and enter state 69
	'void'         shift, and enter state 12
	'while'        shift, and enter state 70
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 147
	LValue         goto state 49
	Type           goto state 50
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 59

State 138

	Stmt -> 'for' '(' Type Ident . ':' Ident ')'        (rule 32)

	':'            shift, and enter state 146


State 139

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 140

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 141

	Expr8 -> LValue '(' ListExpr ')' .                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 142

	ListExpr -> Expr ',' . ListExpr                     (rule 77)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 75
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Integer        goto state 45
	String         goto state 46
	LValue         goto state 76
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 118
	ListExpr       goto state 145

State 143

	Stmt -> LValue '=' Expr ';' .                       (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 144

	LValue -> LValue '[' Expr ']' .                     (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	'++'           reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'--'           reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40


State 145

	ListExpr -> Expr ',' ListExpr .                     (rule 77)

	')'            reduce using rule 77


State 146

	Stmt -> 'for' '(' Type Ident ':' . Ident ')'        (rule 32)

	L_ident        shift, and enter state 2

	Ident          goto state 151

State 147

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         shift, and enter state 150
			(reduce using rule 29)

	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 148

	Expr7 -> 'new' Type '[' Expr ']' .                  (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 149

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 150

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'string'       shift, and enter state 11
	'true'         shift, and enter state 69
	'void'         shift, and enter state 12
	'while'        shift, and enter state 70
	'{'            shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 153
	LValue         goto state 49
	Type           goto state 50
	Expr8          goto state 51
	Expr7          goto state 52
	Expr6          goto state 53
	Expr5          goto state 54
	Expr4          goto state 55
	Expr3          goto state 56
	Expr2          goto state 57
	Expr1          goto state 58
	Expr           goto state 59

State 151

	Stmt -> 'for' '(' Type Ident ':' Ident . ')'        (rule 32)

	')'            shift, and enter state 152


State 152

	Stmt -> 'for' '(' Type Ident ':' Ident ')' .        (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 153

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 89
Number of terminals: 46
Number of non-terminals: 32
Number of states: 154
