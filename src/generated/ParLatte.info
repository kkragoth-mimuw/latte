-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParLatte.y
-----------------------------------------------------------------------------

state 136 contains 1 shift/reduce conflicts.

rule 44 is unused
rule 45 is unused
rule 46 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident '{' ListClassPole '}'      (6)
	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole '}'   (7)
	ClassPole -> Type Ident ';'                        (8)
	ClassPole -> Type Ident '(' ListArg ')' Block      (9)
	ListTopDef -> TopDef                               (10)
	ListTopDef -> TopDef ListTopDef                    (11)
	ListClassPole -> ClassPole                         (12)
	ListClassPole -> ClassPole ListClassPole           (13)
	Arg -> Type Ident                                  (14)
	ListArg ->                                         (15)
	ListArg -> Arg                                     (16)
	ListArg -> Arg ',' ListArg                         (17)
	Block -> '{' ListStmt '}'                          (18)
	ListStmt ->                                        (19)
	ListStmt -> ListStmt Stmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Block                                      (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> LValue '=' Expr ';'                        (24)
	Stmt -> LValue '++' ';'                            (25)
	Stmt -> LValue '--' ';'                            (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> Expr ';'                                   (32)
	Item -> Ident                                      (33)
	Item -> Ident '=' Expr                             (34)
	ListItem -> Item                                   (35)
	ListItem -> Item ',' ListItem                      (36)
	LValue -> Ident                                    (37)
	LValue -> LValue '.' Ident                         (38)
	Type -> 'int'                                      (39)
	Type -> 'string'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Ident                                      (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr8 -> LValue                                    (47)
	Expr8 -> Integer                                   (48)
	Expr8 -> 'true'                                    (49)
	Expr8 -> 'false'                                   (50)
	Expr8 -> LValue '(' ListExpr ')'                   (51)
	Expr8 -> String                                    (52)
	Expr8 -> '(' Expr ')'                              (53)
	Expr7 -> 'new' Type                                (54)
	Expr7 -> Expr8                                     (55)
	Expr6 -> '(' Type ')null'                          (56)
	Expr6 -> Expr7                                     (57)
	Expr5 -> '-' Expr6                                 (58)
	Expr5 -> '!' Expr6                                 (59)
	Expr5 -> Expr6                                     (60)
	Expr4 -> Expr4 MulOp Expr5                         (61)
	Expr4 -> Expr5                                     (62)
	Expr3 -> Expr3 AddOp Expr4                         (63)
	Expr3 -> Expr4                                     (64)
	Expr2 -> Expr2 RelOp Expr3                         (65)
	Expr2 -> Expr3                                     (66)
	Expr1 -> Expr2 '&&' Expr1                          (67)
	Expr1 -> Expr2                                     (68)
	Expr -> Expr1 '||' Expr                            (69)
	Expr -> Expr1                                      (70)
	ListExpr ->                                        (71)
	ListExpr -> Expr                                   (72)
	ListExpr -> Expr ',' ListExpr                      (73)
	AddOp -> '+'                                       (74)
	AddOp -> '-'                                       (75)
	MulOp -> '*'                                       (76)
	MulOp -> '/'                                       (77)
	MulOp -> '%'                                       (78)
	RelOp -> '<'                                       (79)
	RelOp -> '<='                                      (80)
	RelOp -> '>'                                       (81)
	RelOp -> '>='                                      (82)
	RelOp -> '=='                                      (83)
	RelOp -> '!='                                      (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'boolean'      { PT _ (TS _ 23) }
	'class'        { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'extends'      { PT _ (TS _ 26) }
	'false'        { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'new'          { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'void'         { PT _ (TS _ 34) }
	'while'        { PT _ (TS _ 35) }
	'{'            { PT _ (TS _ 36) }
	'||'           { PT _ (TS _ 37) }
	'}'            { PT _ (TS _ 38) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ClassPole       rules 8, 9
	ListTopDef      rules 10, 11
	ListClassPole   rules 12, 13
	Arg             rule  14
	ListArg         rules 15, 16, 17
	Block           rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
	Item            rules 33, 34
	ListItem        rules 35, 36
	LValue          rules 37, 38
	Type            rules 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr8           rules 47, 48, 49, 50, 51, 52, 53
	Expr7           rules 54, 55
	Expr6           rules 56, 57
	Expr5           rules 58, 59, 60
	Expr4           rules 61, 62
	Expr3           rules 63, 64
	Expr2           rules 65, 66
	Expr1           rules 67, 68
	Expr            rules 69, 70
	ListExpr        rules 71, 72, 73
	AddOp           rules 74, 75
	MulOp           rules 76, 77, 78
	RelOp           rules 79, 80, 81, 82, 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'extends'      reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43
	L_ident        reduce using rule 43


State 4

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 10)
	ListTopDef -> TopDef . ListTopDef                   (rule 11)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	%eof           reduce using rule 10

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 15
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	')null'        reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41
	L_ident        reduce using rule 41


State 9

	TopDef -> 'class' . Ident '{' ListClassPole '}'     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident '{' ListClassPole '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	')null'        reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39
	L_ident        reduce using rule 39


State 11

	Type -> 'string' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	')null'        reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40
	L_ident        reduce using rule 40


State 12

	Type -> 'void' .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	')null'        reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42
	L_ident        reduce using rule 42


State 13

	TopDef -> 'class' Ident . '{' ListClassPole '}'     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident '{' ListClassPole '}'    (rule 7)

	'extends'      shift, and enter state 17
	'{'            shift, and enter state 18


State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 11)

	%eof           reduce using rule 11


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 23
	ListArg        goto state 24
	Type           goto state 25

State 17

	TopDef -> 'class' Ident 'extends' . Ident '{' ListClassPole '}'    (rule 7)

	L_ident        shift, and enter state 2

	Ident          goto state 22

State 18

	TopDef -> 'class' Ident '{' . ListClassPole '}'     (rule 6)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 19
	ListClassPole  goto state 20
	Type           goto state 21

State 19

	ListClassPole -> ClassPole .                        (rule 12)
	ListClassPole -> ClassPole . ListClassPole          (rule 13)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 19
	ListClassPole  goto state 32
	Type           goto state 21

State 20

	TopDef -> 'class' Ident '{' ListClassPole . '}'     (rule 6)

	'}'            shift, and enter state 31


State 21

	ClassPole -> Type . Ident ';'                       (rule 8)
	ClassPole -> Type . Ident '(' ListArg ')' Block     (rule 9)

	L_ident        shift, and enter state 2

	Ident          goto state 30

State 22

	TopDef -> 'class' Ident 'extends' Ident . '{' ListClassPole '}'    (rule 7)

	'{'            shift, and enter state 29


State 23

	ListArg -> Arg .                                    (rule 16)
	ListArg -> Arg . ',' ListArg                        (rule 17)

	')'            reduce using rule 16
	','            shift, and enter state 28


State 24

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 27


State 25

	Arg -> Type . Ident                                 (rule 14)

	L_ident        shift, and enter state 2

	Ident          goto state 26

State 26

	Arg -> Type Ident .                                 (rule 14)

	')'            reduce using rule 14
	','            reduce using rule 14


State 27

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 38

	Block          goto state 37

State 28

	ListArg -> Arg ',' . ListArg                        (rule 17)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 23
	ListArg        goto state 36
	Type           goto state 25

State 29

	TopDef -> 'class' Ident 'extends' Ident '{' . ListClassPole '}'    (rule 7)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	ClassPole      goto state 19
	ListClassPole  goto state 35
	Type           goto state 21

State 30

	ClassPole -> Type Ident . ';'                       (rule 8)
	ClassPole -> Type Ident . '(' ListArg ')' Block     (rule 9)

	'('            shift, and enter state 33
	';'            shift, and enter state 34


State 31

	TopDef -> 'class' Ident '{' ListClassPole '}' .     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_ident        reduce using rule 6
	%eof           reduce using rule 6


State 32

	ListClassPole -> ClassPole ListClassPole .          (rule 13)

	'}'            reduce using rule 13


State 33

	ClassPole -> Type Ident '(' . ListArg ')' Block     (rule 9)

	')'            reduce using rule 15
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 23
	ListArg        goto state 41
	Type           goto state 25

State 34

	ClassPole -> Type Ident ';' .                       (rule 8)

	'boolean'      reduce using rule 8
	'int'          reduce using rule 8
	'string'       reduce using rule 8
	'void'         reduce using rule 8
	'}'            reduce using rule 8
	L_ident        reduce using rule 8


State 35

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole . '}'    (rule 7)

	'}'            shift, and enter state 40


State 36

	ListArg -> Arg ',' ListArg .                        (rule 17)

	')'            reduce using rule 17


State 37

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_ident        reduce using rule 5
	%eof           reduce using rule 5


State 38

	Block -> '{' . ListStmt '}'                         (rule 18)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'false'        reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19

	ListStmt       goto state 39

State 39

	Block -> '{' ListStmt . '}'                         (rule 18)
	ListStmt -> ListStmt . Stmt                         (rule 20)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	';'            shift, and enter state 62
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 38
	'}'            shift, and enter state 69
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 47
	LValue         goto state 48
	Type           goto state 49
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58

State 40

	TopDef -> 'class' Ident 'extends' Ident '{' ListClassPole '}' .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_ident        reduce using rule 7
	%eof           reduce using rule 7


State 41

	ClassPole -> Type Ident '(' ListArg . ')' Block     (rule 9)

	')'            shift, and enter state 42


State 42

	ClassPole -> Type Ident '(' ListArg ')' . Block     (rule 9)

	'{'            shift, and enter state 38

	Block          goto state 108

State 43

	LValue -> Ident .                                   (rule 37)
	Type -> Ident .                                     (rule 43)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	')null'        reduce using rule 43
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'++'           reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	'.'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'='            reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37
	L_ident        reduce using rule 43


State 44

	Expr8 -> Integer .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 45

	Expr8 -> String .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52


State 46

	Stmt -> Block .                                     (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 47

	ListStmt -> ListStmt Stmt .                         (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'false'        reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 48

	Stmt -> LValue . '=' Expr ';'                       (rule 24)
	Stmt -> LValue . '++' ';'                           (rule 25)
	Stmt -> LValue . '--' ';'                           (rule 26)
	LValue -> LValue . '.' Ident                        (rule 38)
	Expr8 -> LValue .                                   (rule 47)
	Expr8 -> LValue . '(' ListExpr ')'                  (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 103
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 104
	'-'            reduce using rule 47
	'--'           shift, and enter state 105
	'.'            shift, and enter state 106
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 107
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 49

	Stmt -> Type . ListItem ';'                         (rule 23)

	L_ident        shift, and enter state 2

	Ident          goto state 100
	Item           goto state 101
	ListItem       goto state 102

State 50

	Expr7 -> Expr8 .                                    (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 51

	Expr6 -> Expr7 .                                    (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'||'           reduce using rule 57


State 52

	Expr5 -> Expr6 .                                    (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'||'           reduce using rule 60


State 53

	Expr4 -> Expr5 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'||'           reduce using rule 62


State 54

	Expr4 -> Expr4 . MulOp Expr5                        (rule 61)
	Expr3 -> Expr4 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            shift, and enter state 97
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            shift, and enter state 98
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            shift, and enter state 99
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'||'           reduce using rule 64

	MulOp          goto state 96

State 55

	Expr3 -> Expr3 . AddOp Expr4                        (rule 63)
	Expr2 -> Expr3 .                                    (rule 66)

	'!='           reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'+'            shift, and enter state 94
	','            reduce using rule 66
	'-'            shift, and enter state 95
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'||'           reduce using rule 66

	AddOp          goto state 93

State 56

	Expr2 -> Expr2 . RelOp Expr3                        (rule 65)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 67)
	Expr1 -> Expr2 .                                    (rule 68)

	'!='           shift, and enter state 86
	'&&'           shift, and enter state 87
	')'            reduce using rule 68
	','            reduce using rule 68
	';'            reduce using rule 68
	'<'            shift, and enter state 88
	'<='           shift, and enter state 89
	'=='           shift, and enter state 90
	'>'            shift, and enter state 91
	'>='           shift, and enter state 92
	'||'           reduce using rule 68

	RelOp          goto state 85

State 57

	Expr -> Expr1 . '||' Expr                           (rule 69)
	Expr -> Expr1 .                                     (rule 70)

	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'||'           shift, and enter state 84


State 58

	Stmt -> Expr . ';'                                  (rule 32)

	';'            shift, and enter state 83


State 59

	Expr5 -> '!' . Expr6                                (rule 59)

	'('            shift, and enter state 60
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 82

State 60

	Expr8 -> '(' . Expr ')'                             (rule 53)
	Expr6 -> '(' . Type ')null'                         (rule 56)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 63
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Type           goto state 80
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 81

State 61

	Expr5 -> '-' . Expr6                                (rule 58)

	'('            shift, and enter state 60
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 79

State 62

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 63

	Expr8 -> 'false' .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50


State 64

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 78


State 65

	Expr7 -> 'new' . Type                               (rule 54)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 77

State 66

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	';'            shift, and enter state 76
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 75

State 67

	Expr8 -> 'true' .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 68

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 72


State 69

	Block -> '{' ListStmt '}' .                         (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'class'        reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 70

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 71

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 72

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 127

State 73

	LValue -> Ident .                                   (rule 37)

	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'.'            reduce using rule 37
	'/'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'||'           reduce using rule 37


State 74

	LValue -> LValue . '.' Ident                        (rule 38)
	Expr8 -> LValue .                                   (rule 47)
	Expr8 -> LValue . '(' ListExpr ')'                  (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 103
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            shift, and enter state 106
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 75

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 126


State 76

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 77

	Expr7 -> 'new' Type .                               (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'||'           reduce using rule 54


State 78

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 125

State 79

	Expr5 -> '-' Expr6 .                                (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'||'           reduce using rule 58


State 80

	Expr6 -> '(' Type . ')null'                         (rule 56)

	')null'        shift, and enter state 124


State 81

	Expr8 -> '(' Expr . ')'                             (rule 53)

	')'            shift, and enter state 123


State 82

	Expr5 -> '!' Expr6 .                                (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'||'           reduce using rule 59


State 83

	Stmt -> Expr ';' .                                  (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 84

	Expr -> Expr1 '||' . Expr                           (rule 69)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 122

State 85

	Expr2 -> Expr2 RelOp . Expr3                        (rule 65)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 121

State 86

	RelOp -> '!=' .                                     (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 87

	Expr1 -> Expr2 '&&' . Expr1                         (rule 67)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 120

State 88

	RelOp -> '<' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 89

	RelOp -> '<=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 90

	RelOp -> '==' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 91

	RelOp -> '>' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 92

	RelOp -> '>=' .                                     (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 93

	Expr3 -> Expr3 AddOp . Expr4                        (rule 63)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 119

State 94

	AddOp -> '+' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'new'          reduce using rule 74
	'true'         reduce using rule 74
	L_ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 95

	AddOp -> '-' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'new'          reduce using rule 75
	'true'         reduce using rule 75
	L_ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 96

	Expr4 -> Expr4 MulOp . Expr5                        (rule 61)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 118

State 97

	MulOp -> '%' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 98

	MulOp -> '*' .                                      (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'new'          reduce using rule 76
	'true'         reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 99

	MulOp -> '/' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 100

	Item -> Ident .                                     (rule 33)
	Item -> Ident . '=' Expr                            (rule 34)

	','            reduce using rule 33
	';'            reduce using rule 33
	'='            shift, and enter state 117


State 101

	ListItem -> Item .                                  (rule 35)
	ListItem -> Item . ',' ListItem                     (rule 36)

	','            shift, and enter state 116
	';'            reduce using rule 35


State 102

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 115


State 103

	Expr8 -> LValue '(' . ListExpr ')'                  (rule 51)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	')'            reduce using rule 71
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 113
	ListExpr       goto state 114

State 104

	Stmt -> LValue '++' . ';'                           (rule 25)

	';'            shift, and enter state 112


State 105

	Stmt -> LValue '--' . ';'                           (rule 26)

	';'            shift, and enter state 111


State 106

	LValue -> LValue '.' . Ident                        (rule 38)

	L_ident        shift, and enter state 2

	Ident          goto state 110

State 107

	Stmt -> LValue '=' . Expr ';'                       (rule 24)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 109

State 108

	ClassPole -> Type Ident '(' ListArg ')' Block .     (rule 9)

	'boolean'      reduce using rule 9
	'int'          reduce using rule 9
	'string'       reduce using rule 9
	'void'         reduce using rule 9
	'}'            reduce using rule 9
	L_ident        reduce using rule 9


State 109

	Stmt -> LValue '=' Expr . ';'                       (rule 24)

	';'            shift, and enter state 134


State 110

	LValue -> LValue '.' Ident .                        (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	'.'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 111

	Stmt -> LValue '--' ';' .                           (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 112

	Stmt -> LValue '++' ';' .                           (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 113

	ListExpr -> Expr .                                  (rule 72)
	ListExpr -> Expr . ',' ListExpr                     (rule 73)

	')'            reduce using rule 72
	','            shift, and enter state 133


State 114

	Expr8 -> LValue '(' ListExpr . ')'                  (rule 51)

	')'            shift, and enter state 132


State 115

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 116

	ListItem -> Item ',' . ListItem                     (rule 36)

	L_ident        shift, and enter state 2

	Ident          goto state 100
	Item           goto state 101
	ListItem       goto state 131

State 117

	Item -> Ident '=' . Expr                            (rule 34)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 130

State 118

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'||'           reduce using rule 61


State 119

	Expr4 -> Expr4 . MulOp Expr5                        (rule 61)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 63)

	'!='           reduce using rule 63
	'%'            shift, and enter state 97
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            shift, and enter state 98
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            shift, and enter state 99
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63

	MulOp          goto state 96

State 120

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 67)

	')'            reduce using rule 67
	','            reduce using rule 67
	';'            reduce using rule 67
	'||'           reduce using rule 67


State 121

	Expr3 -> Expr3 . AddOp Expr4                        (rule 63)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 65)

	'!='           reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'+'            shift, and enter state 94
	','            reduce using rule 65
	'-'            shift, and enter state 95
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'||'           reduce using rule 65

	AddOp          goto state 93

State 122

	Expr -> Expr1 '||' Expr .                           (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69


State 123

	Expr8 -> '(' Expr ')' .                             (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53


State 124

	Expr6 -> '(' Type ')null' .                         (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'||'           reduce using rule 56


State 125

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 129


State 126

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 127

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 128


State 128

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	';'            shift, and enter state 62
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 38
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 137
	LValue         goto state 48
	Type           goto state 49
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58

State 129

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	';'            shift, and enter state 62
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 38
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 136
	LValue         goto state 48
	Type           goto state 49
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58

State 130

	Item -> Ident '=' Expr .                            (rule 34)

	','            reduce using rule 34
	';'            reduce using rule 34


State 131

	ListItem -> Item ',' ListItem .                     (rule 36)

	';'            reduce using rule 36


State 132

	Expr8 -> LValue '(' ListExpr ')' .                  (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51


State 133

	ListExpr -> Expr ',' . ListExpr                     (rule 73)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	')'            reduce using rule 71
	'-'            shift, and enter state 61
	'false'        shift, and enter state 63
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 73
	Integer        goto state 44
	String         goto state 45
	LValue         goto state 74
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 113
	ListExpr       goto state 135

State 134

	Stmt -> LValue '=' Expr ';' .                       (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 135

	ListExpr -> Expr ',' ListExpr .                     (rule 73)

	')'            reduce using rule 73


State 136

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         shift, and enter state 138
			(reduce using rule 29)

	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 137

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 138

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 59
	'('            shift, and enter state 60
	'-'            shift, and enter state 61
	';'            shift, and enter state 62
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 38
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 70
	L_quoted       shift, and enter state 71

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Block          goto state 46
	Stmt           goto state 139
	LValue         goto state 48
	Type           goto state 49
	Expr8          goto state 50
	Expr7          goto state 51
	Expr6          goto state 52
	Expr5          goto state 53
	Expr4          goto state 54
	Expr3          goto state 55
	Expr2          goto state 56
	Expr1          goto state 57
	Expr           goto state 58

State 139

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 41
Number of non-terminals: 32
Number of states: 140
