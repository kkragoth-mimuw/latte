declare i32 @main() {
; <label>:0:
	Alloca (LLVMVariable {type' = Int, address = LLVMAddressRegister 1, blockLabel = 0, ident = Just (Ident "i")})
	MemoryStore (LLVMVariable {type' = Int, address = LLVMAddressImmediate 0, blockLabel = 0, ident = Nothing}) (LLVMVariable {type' = Int, address = LLVMAddressRegister 1, blockLabel = 0, ident = Just (Ident "i")})
	Alloca (LLVMVariable {type' = Int, address = LLVMAddressRegister 2, blockLabel = 0, ident = Just (Ident "j")})
	MemoryStore (LLVMVariable {type' = Int, address = LLVMAddressImmediate 1, blockLabel = 0, ident = Nothing}) (LLVMVariable {type' = Int, address = LLVMAddressRegister 2, blockLabel = 0, ident = Just (Ident "j")})
	Load (LLVMVariable {type' = Int, address = LLVMAddressRegister 3, blockLabel = 0, ident = Just (Ident "i")}) (LLVMVariable {type' = Int, address = LLVMAddressRegister 1, blockLabel = 0, ident = Just (Ident "i")})
	Load (LLVMVariable {type' = Int, address = LLVMAddressRegister 4, blockLabel = 0, ident = Just (Ident "j")}) (LLVMVariable {type' = Int, address = LLVMAddressRegister 2, blockLabel = 0, ident = Just (Ident "j")})
	Operation (LLVMVariable {type' = Int, address = LLVMAddressRegister 3, blockLabel = 0, ident = Just (Ident "i")}) (RelBinOp LTH) (LLVMVariable {type' = Int, address = LLVMAddressRegister 4, blockLabel = 0, ident = Just (Ident "j")}) (LLVMVariable {type' = Int, address = LLVMAddressRegister 5, blockLabel = 0, ident = Nothing})
	BranchConditional (LLVMVariable {type' = Int, address = LLVMAddressRegister 5, blockLabel = 0, ident = Nothing}) 1 2
; <label>:1:
	Return (LLVMVariable {type' = Int, address = LLVMAddressImmediate 5, blockLabel = 1, ident = Nothing})
; <label>:2:
	Return (LLVMVariable {type' = Int, address = LLVMAddressImmediate 0, blockLabel = 2, ident = Nothing})
}